<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.iotbricks</groupId>
        <artifactId>iotbricks</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../../..</relativePath>
    </parent>

    <artifactId>hono-device-registry</artifactId>

    <properties>
        <eclipse.hono.version>0.5-M8</eclipse.hono.version>

        <java.base.image>openjdk:8-jre-alpine</java.base.image>
        <vertx.health.port>8088</vertx.health.port>
        <classifier.spring.boot.artifact>exec</classifier.spring.boot.artifact>
    </properties>

    <dependencies>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iotbricks-core-utils</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iotbricks-core-serialization-jackson</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iotbricks-client-device-registry</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iotbricks-service-device-registry-inmemory</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-proton</artifactId>
        </dependency>

        <dependency>
            <groupId>io.glutamate</groupId>
            <artifactId>glutamate</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.1</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <!-- Spring boot -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>

        <!-- Eclipse Hono -->

        <dependency>
            <groupId>org.eclipse.hono</groupId>
            <artifactId>hono-service-base</artifactId>
            <version>${eclipse.hono.version}</version>
        </dependency>

        <!-- Keycloak -->

        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-admin-client</artifactId>
            <version>3.2.1.Final</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>3.1.4.Final</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <version>3.1.4.Final</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <version>3.1.4.Final</version>
        </dependency>

    </dependencies>

    <build>

        <pluginManagement>
            <plugins>

                <!-- spring boot assembly -->

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                            <configuration>
                                <attach>false</attach>
                                <classifier>${classifier.spring.boot.artifact}</classifier>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- docker image generation -->

                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>fabric8-maven-plugin</artifactId>
                    <configuration>
                        <mode>kubernetes</mode>
                        <profile>minimal</profile>
                        <verbose>true</verbose>
                        <images>
                            <image>
                                <name>iotbricks/%a:%v</name>
                                <build>
                                    <maintainer><![CDATA[The IoT bricks project]]></maintainer>
                                </build>
                            </image>
                        </images>

                        <generator>
                            <excludes>
                                <exclude>java-exec</exclude>
                                <exclude>spring-boot</exclude>
                                <exclude>wildfly-swarm</exclude>
                                <exclude>vertx</exclude>
                                <exclude>karaf</exclude>
                                <exclude>webapp</exclude>
                            </excludes>
                        </generator>
                        <enricher>
                            <includes>
                                <include>fmp-controller</include>
                                <include>fmp-ianaservice</include>
                                <include>vertx-health-check</include>
                            </includes>
                        </enricher>
                    </configuration>

                    <executions>
                        <execution>
                            <id>create_resources</id>
                            <!-- create Kubernetes/Openshift descriptors 
                                before the artifact is packaged so that the desciptors are included in the 
                                artifact -->
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>resource</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>build_images</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>

                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>build-docker-image</id>
            <activation>
                <property>
                    <name>env.DOCKER_HOST</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <configuration>

                            <images>
                                <image>
                                    <build>
                                        <from>${java.base.image}</from>
                                        <ports>
                                            <port>5671</port>
                                            <port>5672</port>
                                            <port>8080</port>
                                            <port>8443</port>
                                            <port>${vertx.health.port}</port>
                                        </ports>
                                        <runCmds>
                                            <runCmd><![CDATA[adduser -S -D hono nogroup && mkdir /home/hono/device-registry && chown -R hono /home/hono]]></runCmd>
                                        </runCmds>
                                        <user>hono</user>
                                        <workdir>/home/hono</workdir>
                                        <volumes>
                                            <volume>/home/hono/device-registry</volume>
                                        </volumes>
                                        <cmd>
                                            <exec>
                                                <arg>java</arg>
                                                <arg>-Dvertx.cacheDirBase=/tmp</arg>
                                                <arg>-jar</arg>
                                                <arg>/opt/hono/${project.artifactId}-${project.version}-${classifier.spring.boot.artifact}.jar</arg>
                                            </exec>
                                        </cmd>
                                        <assembly>
                                            <mode>dir</mode>
                                            <basedir>/</basedir>
                                            <inline>
                                                <fileSets>
                                                    <fileSet>
                                                        <directory>${project.build.directory}</directory>
                                                        <outputDirectory>opt/hono</outputDirectory>
                                                        <includes>
                                                            <include>${project.artifactId}-${project.version}-${classifier.spring.boot.artifact}.jar</include>
                                                        </includes>
                                                    </fileSet>
                                                </fileSets>
                                            </inline>
                                        </assembly>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>